{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, DONE } from '../constants/actionTypes';\nexport default ((tasks = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case DONE:\n      return tasks.map(task => task.id === action.payload.id ? action.payload : task);\n\n    case CREATE:\n      return [...tasks, action.payload.data];\n\n    case UPDATE:\n      console.log(action.payload.task);\n      return tasks.map(task => task.id === action.payload.task.id ? action.payload.task : task);\n\n    case DELETE:\n      return tasks.filter(task => task.id !== action.payload);\n\n    default:\n      return [];\n  }\n});","map":{"version":3,"sources":["C:/Users/Tanish and utkarsh/Desktop/Anshul/to-do list/client/src/reducers/tasks.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","DONE","tasks","action","type","payload","map","task","id","data","console","log","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,SAAL;AACE,aAAOM,MAAM,CAACE,OAAd;;AACF,SAAKJ,IAAL;AACE,aAAOC,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAA3B,GAAgCL,MAAM,CAACE,OAAvC,GAAiDE,IAAtE,CAAP;;AACF,SAAKT,MAAL;AACE,aAAO,CAAC,GAAGI,KAAJ,EAAUC,MAAM,CAACE,OAAP,CAAeI,IAAzB,CAAP;;AACF,SAAKV,MAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAaR,MAAM,CAACE,OAAP,CAAeE,IAA5B;AACA,aAAOL,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeE,IAAf,CAAoBC,EAAhC,GAAqCL,MAAM,CAACE,OAAP,CAAeE,IAApD,GAA2DA,IAAhF,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOE,KAAK,CAACU,MAAN,CAAcL,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAA3C,CAAP;;AACF;AACE,aAAO,EAAP;AAbJ;AAeD,CAhBD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, DONE } from '../constants/actionTypes';\n\nexport default (tasks = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case DONE:\n      return tasks.map((task) => (task.id === action.payload.id ? action.payload : task));\n    case CREATE:\n      return [...tasks,action.payload.data];\n    case UPDATE:\n      console.log( action.payload.task);\n      return tasks.map((task) => (task.id === action.payload.task.id ? action.payload.task : task));\n    case DELETE:\n      return tasks.filter((task) => (task.id !== action.payload));\n    default:\n      return [];\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}