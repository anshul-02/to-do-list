{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanish and utkarsh\\\\Desktop\\\\Anshul\\\\to-do list\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux'; // import FileBase from 'react-file-base64';\n\nimport { createTask, updateTask } from '../../actions/tasks';\nimport useStyles from './styles';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const [taskData, setTaskData] = useState({\n    title: ''\n  });\n  const task = useSelector(state => currentId ? state.tasks.find(task => task.id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile')); // console.log(task);\n\n  useEffect(() => {\n    if (task) setTaskData({\n      title: task.task\n    });\n  }, [task]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setTaskData({\n      title: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(taskData);\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createTask({ ...taskData,\n        email: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.email\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updateTask(currentId, { ...taskData,\n        email: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.email\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Please Sign In to create your own to-do-list.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing Task` : 'Add a Task'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: taskData.title,\n    onChange: e => setTaskData({ ...taskData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Tanish and utkarsh/Desktop/Anshul/to-do list/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","createTask","updateTask","useStyles","Form","currentId","setCurrentId","taskData","setTaskData","title","task","state","tasks","find","id","dispatch","classes","user","JSON","parse","localStorage","getItem","clear","handleSubmit","e","preventDefault","console","log","email","result","name","paper","root","form","target","value","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n// import FileBase from 'react-file-base64';\n\nimport { createTask, updateTask } from '../../actions/tasks';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [taskData, setTaskData] = useState({ title: ''});\n  const task = useSelector((state) => (currentId ? state.tasks.find((task) => task.id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  // console.log(task);\n  useEffect(() => {\n    if (task) setTaskData({title: task.task});\n  }, [task]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setTaskData({ title: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(taskData);\n    if (currentId === 0) {\n      dispatch(createTask({ ...taskData, email: user?.result?.email }));\n      clear();\n    } else {\n      dispatch(updateTask(currentId, { ...taskData, email: user?.result?.email }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own to-do-list.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing Task` : 'Add a Task'}</Typography>\n        \n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={taskData.title} onChange={(e) => setTaskData({ ...taskData, title: e.target.value })} />\n       \n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        \n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}